
spring.application.name=ECommerceApi


# Server
server.port=8080

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3307/ecommerce_db?useSSL=false&serverTimezone=UTC&allowPublicKeyRetrieval=true
spring.datasource.username=root
spring.datasource.password=343423
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA/Hibernate Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
# IMPORTANT: Replace this with your own securely generated, base64-encoded secret key for production.
# You can generate one using an online tool or a script.
jwt.secret=VGhpc0lzQVN0cm9uZ0FuZExvbmdTZWNyZXRLZXlGb3JKV1RBdXRoZW50aWNhdGlvbkluT3VyRWNvbW1lcmNlUHJvamVjdA==

# Token expiration times in milliseconds
jwt.accessExpiration=600000 # 10 minutes
jwt.refreshExpiration=15552000000 # 6 months

# Stripe Configuration
stripe.api.key=${STRIPE_API_KEY}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET}

# Logging
logging.level.org.springframework.security=DEBUG  # For auth debugging in dev
logging.level.com.example.ecommerce=DEBUG
